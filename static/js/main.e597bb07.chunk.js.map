{"version":3,"sources":["utils/routes.js","context/ListProvider.tsx","context/ThemeLayout.tsx","containers/Footer.tsx","components/Navbar/Navbar.styles.tsx","components/Navbar/index.tsx","components/Header/Header.styles.tsx","components/Header/index.tsx","components/Search/Search.styles.tsx","components/Search/index.tsx","components/Button/Button.styles.tsx","components/Button/index.tsx","components/Dates/Dates.styles.tsx","components/Dates/index.tsx","components/Wrapper/index.tsx","containers/NavbarContainer.tsx","utils/namedaysServices.ts","utils/fetchServices.ts","containers/SearchContainer.tsx","utils/countries.ts","pages/Home.tsx","pages/SavedList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HOME","SAVED","initialState","savedList","clearNames","deleteName","addName","ListContext","React","createContext","ListProvider","children","restProps","useState","setSavedList","Provider","value","id","undefined","list","newList","splice","nameObj","state","theme","primary","secondary","black","bright","white","gray","pink","maxWidth","green","ThemeLayout","GlobalStyle","createGlobalStyle","Footer","StyledFooter","styled","div","Nav","nav","LogoText","css","StyledLink","Link","Navbar","Logo","MainSection","main","SecondSection","Title","h1","MainText","h2","mark","SecontText","h4","WhiteBoard","Aside","AsideCard","CountryText","SelectInput","select","Callendar","input","Header","Background","style","backgroundColor","boxSizing","padding","onChange","name","Option","type","min","max","placeholder","SecondText","Text","p","size","Input","SimliarDays","Form","form","Search","data-testid","onSubmit","e","preventDefault","action","StyledButton","button","danger","remove","accept","Button","text","Card","marked","onClick","Container","Day","Month","Dates","day","month","Wrapper","StyledWrapper","center","flex","justifyContent","alignItems","margin","flexDirection","NavbarContainer","marginRight","to","ROUTES","changeNumberToMonth","monthNumber","getStringFromNamesArray","namesArr","join","getByName","country","a","axios","res","body","data","results","getNameday","namedays","split","getTommorowNamedays","getYesterdayNamedays","SearchContainer","namesdayDates","setNamesdayDates","setName","searchName","setSearchName","namesdayPeople","setNamesdayPeople","markedDates","setMarkedDates","useContext","target","length","alert","then","arr","names","reduce","acc","curr","currNames","noRepeatedNames","Set","Array","from","getAllNamesFromNameDays","catch","err","message","toUpperCase","allIndex","fill","map","_","idx","every","dates","includes","nextState","indexOf","handleMarkers","String","filter","countries","slug","Home","initialDate","Date","toJSON","slice","selectedDate","setSelectedDate","setCountry","setNames","namesTommorow","setNamesTommorow","namesYesterday","setNamesYesterday","useEffect","date","arrayWithDate","Number","getMonthDayObjectFromDate","Error","SavedList","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e597bb07.chunk.js","sourcesContent":["export const HOME = \"/\";\r\nexport const SAVED = \"/saved\";\r\n","import React, { useState } from \"react\";\r\n\r\ninterface SavedName {\r\n  name: string;\r\n  dates: SingleDate[];\r\n}\r\n\r\ninterface SavedListContext {\r\n  savedList: SavedName[];\r\n  clearNames: () => void;\r\n  deleteName: (id: number) => void;\r\n  addName: (savedName: SavedName) => void;\r\n}\r\n\r\nconst initialState = {\r\n  savedList: [],\r\n  clearNames: () => {},\r\n  deleteName: () => {},\r\n  addName: () => {},\r\n};\r\n\r\nexport const ListContext = React.createContext<SavedListContext>(initialState);\r\n\r\nexport const ListProvider: React.FC = ({ children, ...restProps }) => {\r\n  const [savedList, setSavedList] = useState<SavedName[]>([]);\r\n\r\n  const addName = (nameObj: SavedName) => {\r\n    setSavedList((state) => [nameObj, ...state]);\r\n  };\r\n\r\n  const deleteName = (id: number) => {\r\n    if (setSavedList === undefined) return null;\r\n    setSavedList((list: SavedName[]) => {\r\n      const newList = [...list];\r\n      newList.splice(id, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const clearNames = () => {\r\n    setSavedList([]);\r\n  };\r\n\r\n  return (\r\n    <ListContext.Provider\r\n      value={{ savedList, clearNames, deleteName, addName }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </ListContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\n\r\nexport const theme = {\r\n  primary: \"#55B8FF\",\r\n  secondary: \"rgb(71,165,233,0.1)\",\r\n  black: \"#161616\",\r\n  bright: \"#FBFBFB\",\r\n  white: \"#FFF\",\r\n  gray: \"#222\",\r\n  pink: \"#FF5555\",\r\n  maxWidth: \"1280px\",\r\n  green: \"#3c3\",\r\n};\r\n\r\nexport const ThemeLayout: React.FC = ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <GlobalStyle />\r\n      {children}\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody {\r\n  margin: 0;\r\n  font-family: Montserrat, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n    \"Helvetica Neue\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  font-weight: 300;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n    monospace;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\na {\r\n  font-size: 20px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n}\r\n\r\na:hover {\r\n  color: rgb(0, 174, 255);\r\n}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport function Footer() {\r\n  return <StyledFooter>by Dawid Kurpiel to Albacross</StyledFooter>;\r\n}\r\n\r\nconst StyledFooter = styled.div`\r\n  text-align: center;\r\n  background-color: #55b8ff;\r\n  color: white;\r\n`;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype LogoType = {\r\n  primary?: boolean;\r\n  secondary?: boolean;\r\n};\r\n\r\nexport const Nav = styled.nav`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  display: flex;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const LogoText = styled.div<LogoType>`\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.white};\r\n  ${({ theme, secondary }) =>\r\n    secondary &&\r\n    css`\r\n      color: ${theme.gray};\r\n      font-weight: 300;\r\n    `};\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  display: flex;\r\n  text-transform: none;\r\n  color: ${({ theme }) => theme.white};\r\n  border-bottom: 5px solid transparent;\r\n  padding: 20px 40px;\r\n  font-weight: 500;\r\n  transition: 0.2s;\r\n  :hover {\r\n    border-bottom: 5px solid ${({ theme }) => theme.bright};\r\n    color: ${({ theme }) => theme.bright};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { LogoText, Nav, StyledLink } from \"./Navbar.styles\";\r\n\r\ninterface ILogo {\r\n  primary?: boolean;\r\n  secondary?: boolean;\r\n}\r\n\r\ninterface NavbarElements {\r\n  Link: typeof StyledLink;\r\n  Logo: React.FC<ILogo>;\r\n}\r\n\r\nexport const Navbar: React.FC & NavbarElements = ({\r\n  children,\r\n  ...restProps\r\n}) => <Nav {...restProps}>{children}</Nav>;\r\n\r\nNavbar.Link = StyledLink;\r\nNavbar.Logo = LogoText;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ntype MainTextType = {\r\n  mark?: boolean;\r\n};\r\n\r\nexport const MainSection = styled.main`\r\n  max-width: ${({ theme }) => theme.maxWidth};\r\n  margin: auto;\r\n  display: flex;\r\n  height: 40vh;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const SecondSection = styled.main`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin: 10px 0;\r\n  font-size: 3.4em;\r\n  text-align: center;\r\n  padding: 0.1em;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const MainText = styled.h2<MainTextType>`\r\n  text-align: left;\r\n  font-size: 2em;\r\n  ${({ theme, mark }) =>\r\n    mark &&\r\n    css`\r\n      border-left: 10px solid ${theme.primary};\r\n    `};\r\n  padding: 10px 0 10px 20px;\r\n  font-weight: 00;\r\n`;\r\n\r\nexport const SecontText = styled.h4`\r\n  margin: 1.4em 0;\r\n  font-size: 14px;\r\n  text-align: left;\r\n  letter-spacing: 0.7px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const WhiteBoard = styled.div`\r\n  display: flex;\r\n  background-color: white;\r\n  padding: 0.1em 0 2em;\r\n`;\r\n\r\nexport const Aside = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  alighn-items: flex-end;\r\n  width: 100%;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const AsideCard = styled.div`\r\n  padding: 1em;\r\n  width: 17vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CountryText = styled.h1`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const SelectInput = styled.select`\r\n  max-width: 12ch;\r\n  padding: 0.25em 0.5em;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  font-family: Montserrat;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  line-height: 1.4;\r\n  background-color: transparent;\r\n  margin: 0 auto 0 1em;\r\n`;\r\n\r\nexport const Callendar = styled.input`\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  font-size: 1.4em;\r\n  padding: 8px;\r\n  margin: 0 20px;\r\n  text-decoration: none;\r\n  border: none;\r\n  font-family: montserrat;\r\n  border-bottom: 5px solid #ddd;\r\n  transition: 0.2s;\r\n  :focus {\r\n    background-color: transparent;\r\n    outline: none;\r\n    border-bottom: 5px solid ${({ theme }) => theme.primary};\r\n  }\r\n  :hover {\r\n    outline: none;\r\n    border-bottom: 5px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { HeaderElements } from \"./IHeader\";\r\nimport {\r\n  SecontText,\r\n  WhiteBoard,\r\n  Aside,\r\n  AsideCard,\r\n  CountryText,\r\n  Title,\r\n  MainText,\r\n  SelectInput,\r\n  Callendar,\r\n  MainSection,\r\n  SecondSection,\r\n} from \"./Header.styles\";\r\n\r\nexport const Header: React.FC & HeaderElements = ({ children, ...restProps }) => {\r\n  return <Header.Background {...restProps}>{children}</Header.Background>;\r\n};\r\n\r\nHeader.Background = ({ children, ...restProps }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"rgb(71,165,233,0.1)\",\r\n        boxSizing: \"border-box\",\r\n        padding: \"5vh 0 \",\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.SelectInput = ({ children, value, onChange, ...restProps }) => {\r\n  return (\r\n    <SelectInput\r\n      id=\"country\"\r\n      name=\"country\"\r\n      onChange={onChange}\r\n      value={value}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </SelectInput>\r\n  );\r\n};\r\n\r\nHeader.Option = ({ name, value, ...restProps }) => {\r\n  return (\r\n    <option value={value} {...restProps}>\r\n      {name}\r\n    </option>\r\n  );\r\n};\r\n\r\nHeader.Callendar = ({ onChange, value, ...restProps }) => {\r\n  return (\r\n    <Callendar\r\n      type=\"date\"\r\n      min=\"2021-01-01\"\r\n      max=\"2022-12-31\"\r\n      value={value}\r\n      placeholder=\"mm-dd-yyyy\"\r\n      onChange={onChange}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nHeader.MainText = ({ children, ...restProps }) => {\r\n  return <h1 {...restProps}>{children}</h1>;\r\n};\r\n\r\nHeader.Title = ({ children, ...restProps }) => {\r\n  return <Title {...restProps}>{children}</Title>;\r\n};\r\nHeader.MainText = ({ children, ...restProps }) => {\r\n  return <MainText {...restProps}>{children}</MainText>;\r\n};\r\nHeader.SecondText = ({ children, ...restProps }) => {\r\n  return <SecontText {...restProps}>{children}</SecontText>;\r\n};\r\nHeader.WhiteBoard = ({ children, ...restProps }) => {\r\n  return <WhiteBoard {...restProps}>{children}</WhiteBoard>;\r\n};\r\nHeader.Aside = ({ children, ...restProps }) => {\r\n  return <Aside {...restProps}>{children}</Aside>;\r\n};\r\nHeader.AsideCard = ({ children, ...restProps }) => {\r\n  return <AsideCard {...restProps}>{children}</AsideCard>;\r\n};\r\nHeader.CountryText = ({ children, ...restProps }) => {\r\n  return <CountryText {...restProps}>{children}</CountryText>;\r\n};\r\nHeader.MainSection = ({ children, ...restProps }) => {\r\n  return <MainSection {...restProps}>{children}</MainSection>;\r\n};\r\nHeader.SecondSection = ({ children, ...restProps }) => {\r\n  return <SecondSection {...restProps}>{children}</SecondSection>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\ntype TextType = {\r\n  size?: string;\r\n};\r\n\r\nexport const Text = styled.p<TextType>`\r\n  font-weight: 300;\r\n  font-size: 1.2em;\r\n\r\n  ${({ size }) => size === \"large\" && \"font-size: 2em; font-weight: 300\"}\r\n  ${({ size }) => size === \"medium\" && \"font-size: 1.4em; font-weight: 400\"}\r\n  ${({ size }) => size === \"small\" && \"font-size: 0.9em; font-weight: 600\"}\r\n`;\r\n\r\nexport const Input = styled.input`s\r\n  cursor: pointer;\r\n  font-size: 2em;\r\n  padding: 8px 18px;\r\n  text-decoration: none;\r\n  border: none;\r\n  font-family: montserrat;\r\n  border-bottom: 3px solid #999;\r\n  transition: 0.2s;\r\n  background-color: white;\r\n  :active {\r\n    background-color: white;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n    border-bottom: 3px solid ${({ theme }) => theme.primary};\r\n    background-color: white;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n    border-bottom: 3px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const SimliarDays = styled.div`\r\n  padding: 50px;\r\n  margin-bottom: 50px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Form = styled.form``;\r\nexport const Container = styled.div``;\r\nexport const Day = styled.h1``;\r\n","import React from \"react\";\r\nimport { SeachElements } from \"./ISeach\";\r\nimport { Text, Input, SimliarDays, Form } from \"./Search.styles\";\r\n\r\nexport const Search: React.FC & SeachElements = ({ children }) => {\r\n  return <div>{children}</div>;\r\n};\r\n\r\nSearch.Title = ({ children, ...restProps }) => (\r\n  <h1 {...restProps}>{children}</h1>\r\n);\r\n\r\nSearch.Text = ({ children, ...restProps }) => (\r\n  <Text {...restProps}>{children}</Text>\r\n);\r\n\r\nSearch.Input = ({ value, onChange, children, ...restProps }) => (\r\n  <Input\r\n    data-testid=\"input\"\r\n    type=\"text\"\r\n    name=\"name\"\r\n    id=\"name\"\r\n    value={value}\r\n    onChange={onChange}\r\n  />\r\n);\r\n\r\nSearch.Form = ({ children, ...restProps }) => (\r\n  <Form onSubmit={(e) => e.preventDefault()} action=\"\" {...restProps}>\r\n    {children}\r\n  </Form>\r\n);\r\nSearch.SimliarDays = ({ children, ...restProps }) => (\r\n  <SimliarDays {...restProps}>{children}</SimliarDays>\r\n);\r\n","import styled, { css } from \"styled-components\";\r\n\r\ntype IButtonProps = {\r\n  primary?: boolean;\r\n  secondary?: boolean;\r\n  danger?: boolean;\r\n  accept?: boolean;\r\n  remove?: boolean;\r\n};\r\n\r\nexport const StyledButton = styled.button<IButtonProps>`\r\n  background: transparent;\r\n  border-radius: 5px;\r\n  padding: 0.75em 2em;\r\n  margin: 0 15px;\r\n  font-size: 20px;\r\n  border-radius: 15px;\r\n  border: none;\r\n  color: black;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: 0.2s;\r\n  border: 3px solid transparent;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${({ theme, primary }) =>\r\n    primary &&\r\n    css`\r\n      background-color: ${theme.primary};\r\n      color: ${theme.white};\r\n\r\n      :hover {\r\n        background-color: ${theme.white};\r\n        color: ${theme.primary};\r\n        border-color: ${theme.primary};\r\n      }\r\n    `}\r\n\r\n  ${({ theme, secondary }) =>\r\n    secondary &&\r\n    css`\r\n      background-color: ${theme.white};\r\n      color: ${theme.primary};\r\n      border-color: ${theme.primary};\r\n      font-weight: 600;\r\n      :hover {\r\n        background-color: ${theme.primary};\r\n        color: ${theme.white};\r\n      }\r\n    `}\r\n\r\n    ${({ theme, danger }) =>\r\n    danger &&\r\n    css`\r\n      background-color: ${theme.pink};\r\n      color: ${theme.white};\r\n      :hover {\r\n        transform: scale(0.97);\r\n      }\r\n    `}\r\n\r\n    ${({ theme, remove }) =>\r\n    remove &&\r\n    css`\r\n      color: ${theme.pink};\r\n      border: 2px solid ${theme.pink};\r\n      :hover {\r\n        background-color: ${theme.pink};\r\n        color: ${theme.white};\r\n      }\r\n    `}\r\n\r\n    ${({ theme, accept }) =>\r\n    accept &&\r\n    css`\r\n      background-color: ${theme.green};\r\n      color: ${theme.white};\r\n      font-weight: 600;\r\n      :hover {\r\n        color: ${theme.green};\r\n        background-color: ${theme.white};\r\n        border: 3px solid ${theme.green};\r\n      }\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { StyledButton } from \"./Button.styles\";\r\nexport interface ButtonProps {\r\n  text: string;\r\n  primary?: boolean;\r\n  secondary?: boolean;\r\n  danger?: boolean;\r\n  accept?: boolean;\r\n  remove?: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ text, ...restProps }) => (\r\n  <StyledButton {...restProps}>{text}</StyledButton>\r\n);\r\n","import styled, { css } from \"styled-components\";\r\n\r\ntype ICard = {\r\n  marked?: boolean;\r\n};\r\n\r\nexport const Card = styled.div<ICard>`\r\n  width: 200px;\r\n  height: 240px;\r\n  margin: 40px 25px;\r\n  background-color: ${({ theme }) => theme.white};\r\n  border-top: 10px solid ${({ theme }) => theme.primary};\r\n  box-shadow: 11px 12px 19px -6px rgba(0, 0, 0, 0.09),\r\n    -11px -12px 19px -6px rgba(0, 0, 0, 0.07);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  user-select: none;\r\n  transition: 0.2s;\r\n\r\n  ${({ theme, marked }) =>\r\n    marked &&\r\n    css`\r\n      border-top: 20px solid ${theme.green};\r\n    `};\r\n\r\n  ${({ onClick }) =>\r\n    onClick &&\r\n    css`\r\n      :hover {\r\n        transform: translateY(5px);\r\n        cursor: pointer;\r\n      }\r\n    `};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Day = styled.h1`\r\n  font-size: 4rem;\r\n`;\r\nexport const Month = styled.h4``;\r\n","import React from \"react\";\r\nimport { Card, Container, Day, Month } from \"./Dates.styles\";\r\n\r\ninterface IDateElements {\r\n  Card: React.FC<ICard>;\r\n  Container: React.FC;\r\n}\r\ninterface ICard {\r\n  day: string | number;\r\n  month: string | number;\r\n  marked?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const Dates: React.FC<IDateElements> & IDateElements = ({\r\n  children,\r\n  ...restProps\r\n}) => <div {...restProps}>{children}</div>;\r\n\r\nDates.Card = ({ day, month, ...restProps }) => (\r\n  <Card data-testid=\"date-card\" {...restProps}>\r\n    <Day>{day}</Day>\r\n    <Month>{month}</Month>\r\n  </Card>\r\n);\r\n\r\nDates.Container = ({ children, ...restProps }) => (\r\n  <Container {...restProps}>{children}</Container>\r\n);\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype WrapperProps = {\r\n  center?: boolean;\r\n  flex?: boolean;\r\n  justifyContent?: string;\r\n  alignItems?: string;\r\n  margin?: string;\r\n  flexDirection?: string;\r\n};\r\n\r\nexport const Wrapper: React.FC<WrapperProps> = ({ children, ...restProps }) => {\r\n  return <StyledWrapper {...restProps}>{children}</StyledWrapper>;\r\n};\r\n\r\nconst StyledWrapper = styled.div<WrapperProps>`\r\n  max-width: ${({ theme }) => theme.maxWidth};\r\n  margin: 0 auto;\r\n  ${({ center }) =>\r\n    center &&\r\n    css`\r\n      text-align: center;\r\n    `};\r\n\r\n  ${({ flex }) =>\r\n    flex &&\r\n    css`\r\n      display: flex;\r\n      width: 100%;\r\n    `};\r\n\r\n  ${({ justifyContent }) =>\r\n    justifyContent &&\r\n    css`\r\n      display: flex;\r\n      width: 100%;\r\n      justify-content: ${justifyContent};\r\n    `};\r\n  ${({ alignItems }) =>\r\n    alignItems &&\r\n    css`\r\n      display: flex;\r\n      width: 100%;\r\n      align-items: ${alignItems};\r\n    `};\r\n  ${({ margin }) =>\r\n    margin &&\r\n    css`\r\n      margin: ${margin};\r\n    `};\r\n  ${({ flexDirection }) =>\r\n    flexDirection &&\r\n    css`\r\n      display: flex;\r\n      width: 100%;\r\n      flex-direction: ${flexDirection};\r\n    `};\r\n`;\r\n","import React from \"react\";\r\nimport * as ROUTES from \"../utils/routes\";\r\nimport { Navbar, Wrapper } from \"../components\";\r\n\r\nexport function NavbarContainer() {\r\n  return (\r\n    <Navbar>\r\n      <Wrapper flex>\r\n        <Navbar.Link style={{ marginRight: \"auto\" }} to={ROUTES.HOME}>\r\n          <Navbar.Logo>FindYour</Navbar.Logo>\r\n          <Navbar.Logo secondary>NAMEDAY</Navbar.Logo>\r\n        </Navbar.Link>\r\n        <Navbar.Link to={ROUTES.HOME}>Home</Navbar.Link>\r\n        <Navbar.Link to={ROUTES.SAVED}>Saved</Navbar.Link>\r\n      </Wrapper>\r\n    </Navbar>\r\n  );\r\n}\r\n","export function changeNumberToMonth(monthNumber: number): string {\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  return months[monthNumber - 1];\r\n}\r\n\r\nexport function getMonthDayObjectFromDate(date: string): SingleDate {\r\n  const arrayWithDate = date.split(\"-\").map(Number);\r\n  return {\r\n    month: arrayWithDate[1],\r\n    day: arrayWithDate[2],\r\n  };\r\n}\r\n\r\nexport function getCurrentDate(): string {\r\n  return new Date().toJSON().slice(0, 10);\r\n}\r\n\r\nexport function getAllNamesFromNameDays(arr: SingleDateNames[]) {\r\n  const names = arr.reduce((acc: string[], curr) => {\r\n    const currNames = curr.name.split(\", \");\r\n    return [...acc, ...currNames];\r\n  }, []);\r\n  const noRepeatedNames = new Set([...names]);\r\n\r\n  return Array.from(noRepeatedNames);\r\n}\r\n\r\nexport function getStringFromNamesArray(namesArr: string[]): string {\r\n  return namesArr?.join(\", \");\r\n}\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\ninterface APIResponseByDate {\r\n  data: {\r\n    dates: SingleDate;\r\n    namedays: { [Code in CountryCode]: string };\r\n  };\r\n}\r\n\r\ninterface APIResponseByName {\r\n  results: SingleDateNames[];\r\n}\r\n\r\nexport const getByName = async (\r\n  name: string,\r\n  country: CountryCode\r\n): Promise<SingleDateNames[]> => {\r\n  try {\r\n    const res: AxiosResponse<APIResponseByName> = await axios(\r\n      `https://api.abalin.net/getdate?name=${name}&country=${country}`\r\n    );\r\n    const body = res.data.results;\r\n    return body;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getNameday = async (\r\n  day: number,\r\n  month: number,\r\n  country: CountryCode\r\n): Promise<string[]> => {\r\n  try {\r\n    const res: AxiosResponse<APIResponseByDate> = await axios(\r\n      `https://api.abalin.net/namedays?country=${country}&month=${month}&day=${day}`\r\n    );\r\n    const body = res.data.data;\r\n    return body.namedays[country].split(\", \");\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getTommorowNamedays = async (\r\n  country: CountryCode\r\n): Promise<string[]> => {\r\n  try {\r\n    const res: AxiosResponse<APIResponseByDate> = await axios(\r\n      `https://api.abalin.net/tomorrow?country=${country}`\r\n    );\r\n    const body = res.data.data;\r\n    return body.namedays[country].split(\", \");\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getYesterdayNamedays = async (\r\n  country: CountryCode\r\n): Promise<string[]> => {\r\n  try {\r\n    const res: AxiosResponse<APIResponseByDate> = await axios(\r\n      `https://api.abalin.net/yesterday?country=${country}`\r\n    );\r\n    const body = res.data.data;\r\n    return body.namedays[country].split(\", \");\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Search, Button, Dates, Wrapper } from \"../components\";\r\n\r\nimport { ListContext } from \"../context\";\r\nimport {\r\n  changeNumberToMonth,\r\n  getAllNamesFromNameDays,\r\n} from \"../utils/namedaysServices\";\r\nimport { getByName } from \"../utils/fetchServices\";\r\n\r\nexport function SearchContainer({ country }: { country: CountryCode }) {\r\n  const [namesdayDates, setNamesdayDates] = useState<SingleDateNames[]>([]);\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [searchName, setSearchName] = useState<string>(\"\");\r\n  const [namesdayPeople, setNamesdayPeople] = useState<string[]>([]);\r\n  const [markedDates, setMarkedDates] = useState<number[]>([]);\r\n\r\n  const { savedList, addName } = useContext(ListContext);\r\n\r\n  const handleInputTyping = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    if (!name.length) return alert(\"Type name\");\r\n    getByName(name, country)\r\n      .then((res) => {\r\n        setSearchName(name);\r\n        setNamesdayDates(res);\r\n        setNamesdayPeople(getAllNamesFromNameDays(res));\r\n      })\r\n      .catch((err) => alert(err.message));\r\n    setMarkedDates([]);\r\n  };\r\n\r\n  const handleSaveButton = () => {\r\n    if (!searchName.length) return alert(\"Type name and click search!\");\r\n    if (!markedDates.length) return alert(\"Select dates to save!\");\r\n    if (!namesdayDates.length)\r\n      return alert(\"There is not any namedays for this name :(\");\r\n\r\n    if (!savedList?.every(({ name }) => name !== searchName))\r\n      return alert(\r\n        `You have already saved ${name} on your list. Go to 'Saved list' to remove this name`\r\n      );\r\n\r\n    const dates = markedDates.map((idx) => namesdayDates[idx]);\r\n\r\n    const savedName: SavedName = {\r\n      name: searchName,\r\n      dates,\r\n    };\r\n    addName(savedName);\r\n    setMarkedDates([]);\r\n    alert(`Saved, you can find saved namesday in \"Saved tab\"`);\r\n  };\r\n\r\n  const handleMarkers = (idx: number) => {\r\n    markedDates.includes(idx)\r\n      ? setMarkedDates((state) => {\r\n          const nextState = [...state];\r\n          nextState.splice(markedDates.indexOf(idx), 1);\r\n          return nextState;\r\n        })\r\n      : setMarkedDates((state) => [...state, idx]);\r\n  };\r\n\r\n  const handleSelectAllMarkers = () => {\r\n    const allIndex = new Array(namesdayDates.length)\r\n      .fill(0)\r\n      .map((_, idx) => idx);\r\n    setMarkedDates(allIndex);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Search>\r\n        <Wrapper flex margin=\"5em 0 6em\" justifyContent=\"space-around\">\r\n          <Search.Title>Get name days by name:</Search.Title>\r\n          <Search.Form>\r\n            <Search.Input value={name} onChange={handleInputTyping} />\r\n            <Button onClick={handleSearchClick} primary text=\"Search\" />\r\n          </Search.Form>\r\n        </Wrapper>\r\n        {namesdayDates.length !== 0 && (\r\n          <>\r\n            <Wrapper\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              margin=\"20px 0\"\r\n            >\r\n              <Search.Text size=\"large\">\r\n                <>\r\n                  <b>{searchName.toUpperCase()} </b>\r\n                  has nameday at:\r\n                </>\r\n              </Search.Text>\r\n              <Button\r\n                onClick={handleSelectAllMarkers}\r\n                secondary\r\n                text=\"SelectAll\"\r\n              />\r\n              <Button\r\n                onClick={handleSaveButton}\r\n                accept\r\n                text=\"Save selected dates!\"\r\n              />\r\n            </Wrapper>\r\n            <Dates.Container>\r\n              {namesdayDates?.map(({ day, month }, idx) => (\r\n                <Dates.Card\r\n                  key={String(day) + String(month)}\r\n                  day={day}\r\n                  month={changeNumberToMonth(month)}\r\n                  marked={markedDates.includes(idx)}\r\n                  onClick={() => handleMarkers(idx)}\r\n                />\r\n              ))}\r\n            </Dates.Container>\r\n\r\n            <Search.SimliarDays>\r\n              <Search.Text size=\"large\">\r\n                People who also have nameday at the same days:\r\n              </Search.Text>\r\n              <Search.Text size=\"small\">\r\n                {namesdayPeople\r\n                  .filter((name) => name !== searchName)\r\n                  .join(\",  \")}\r\n              </Search.Text>\r\n            </Search.SimliarDays>\r\n          </>\r\n        )}\r\n\r\n        {!!searchName.length && !namesdayDates.length ? (\r\n          <Search.SimliarDays>\r\n            <Search.Text size=\"large\">\r\n              <b>{`Didn't found any nameday for: \"${searchName.toUpperCase()}\"   `}</b>\r\n            </Search.Text>\r\n            <Search.Text size=\"medium\">{`Maybe ${searchName.toUpperCase()} is from another country?`}</Search.Text>\r\n          </Search.SimliarDays>\r\n        ) : null}\r\n      </Search>\r\n    </Wrapper>\r\n  );\r\n}\r\n","export const countries: Country[] = [\r\n  { name: \"Austria\", slug: \"at\" },\r\n  { name: \"Bulgaria\", slug: \"bg\" },\r\n  { name: \"Croatia\", slug: \"hr\" },\r\n  { name: \"Czechia\", slug: \"cz\" },\r\n  { name: \"Denmark\", slug: \"dk\" },\r\n  { name: \"Estonia\", slug: \"ee\" },\r\n  { name: \"Finland\", slug: \"fi\" },\r\n  { name: \"France\", slug: \"fr\" },\r\n  { name: \"Germany\", slug: \"de\" },\r\n  { name: \"Greece\", slug: \"gr\" },\r\n  { name: \"Hungary\", slug: \"hu\" },\r\n  { name: \"Italy\", slug: \"it\" },\r\n  { name: \"Latvia\", slug: \"lv\" },\r\n  { name: \"Lithuania\", slug: \"lt\" },\r\n  { name: \"Poland\", slug: \"pl\" },\r\n  { name: \"Russian Federation\", slug: \"ru\" },\r\n  { name: \"Slovakia\", slug: \"sk\" },\r\n  { name: \"Spain\", slug: \"es\" },\r\n  { name: \"Sweden\", slug: \"se\" },\r\n  { name: \"United States\", slug: \"us\" },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Header, Wrapper } from \"../components\";\r\nimport { SearchContainer } from \"../containers\";\r\nimport { countries } from \"../utils/countries\";\r\n\r\nimport {\r\n  getNameday,\r\n  getTommorowNamedays,\r\n  getYesterdayNamedays,\r\n} from \"../utils/fetchServices\";\r\n\r\nimport {\r\n  getMonthDayObjectFromDate,\r\n  getCurrentDate,\r\n  getStringFromNamesArray,\r\n} from \"../utils/namedaysServices\";\r\n\r\nexport function Home() {\r\n  const initialDate = getCurrentDate();\r\n  const [selectedDate, setSelectedDate] = useState<string>(initialDate);\r\n  const [country, setCountry] = useState<CountryCode>(\"pl\");\r\n\r\n  const [names, setNames] = useState<string[]>([]);\r\n  const [namesTommorow, setNamesTommorow] = useState<string[]>([]);\r\n  const [namesYesterday, setNamesYesterday] = useState<string[]>([]);\r\n\r\n  const handleCallendarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedDate(e.target.value);\r\n  };\r\n  const handleInputSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setCountry(e.target.value as CountryCode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { day, month } = getMonthDayObjectFromDate(selectedDate);\r\n    getNameday(day, month, country)\r\n      .then((res) => {\r\n        setNames(res);\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  }, [selectedDate, country]);\r\n\r\n  useEffect(() => {\r\n    getYesterdayNamedays(country)\r\n      .then((res) => {\r\n        setNamesYesterday(res);\r\n      })\r\n      .catch((err) => Error(err.message));\r\n\r\n    getTommorowNamedays(country)\r\n      .then((res) => {\r\n        setNamesTommorow(res);\r\n      })\r\n      .catch((err) => Error(err.message));\r\n  }, [country]);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Header.MainSection>\r\n          <Header.SecondSection>\r\n            <Header.MainText>on</Header.MainText>\r\n            <Header.Callendar\r\n              value={selectedDate}\r\n              onChange={handleCallendarChange}\r\n            />\r\n            <Header.MainText> name day is celebrated by:</Header.MainText>\r\n          </Header.SecondSection>\r\n\r\n          <Header.Title>\r\n            {getStringFromNamesArray(names) || \"Loading...\"}\r\n          </Header.Title>\r\n        </Header.MainSection>\r\n\r\n        <Header.WhiteBoard>\r\n          <Wrapper alignItems=\"center\" justifyContent=\"flex-end\">\r\n            <Header.CountryText>Country:</Header.CountryText>\r\n\r\n            <Header.SelectInput value={country} onChange={handleInputSelect}>\r\n              {countries.map(({ name, slug }) => (\r\n                <Header.Option key={slug} name={name} value={slug}>\r\n                  {name}\r\n                </Header.Option>\r\n              ))}\r\n            </Header.SelectInput>\r\n\r\n            <Header.Aside>\r\n              <Header.AsideCard>\r\n                <Header.SecondText>\r\n                  {getStringFromNamesArray(namesTommorow) || \"Loading...\"}\r\n                </Header.SecondText>\r\n                <Header.MainText mark>Tommorow</Header.MainText>\r\n              </Header.AsideCard>\r\n              <Header.AsideCard>\r\n                <Header.SecondText>\r\n                  {getStringFromNamesArray(namesYesterday) || \"Loading...\"}\r\n                </Header.SecondText>\r\n                <Header.MainText mark>Yesterday</Header.MainText>\r\n              </Header.AsideCard>\r\n            </Header.Aside>\r\n          </Wrapper>\r\n        </Header.WhiteBoard>\r\n      </Header>\r\n      <SearchContainer country={country} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { changeNumberToMonth } from \"../utils/namedaysServices\";\r\nimport { ListContext } from \"../context/ListProvider\";\r\nimport { Header, Search, Button, Dates, Wrapper } from \"../components\";\r\n\r\nexport function SavedList() {\r\n  const { savedList, clearNames, deleteName } = useContext(ListContext);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Header.Title>Saved Name Days </Header.Title>\r\n        <Header.SecondSection>\r\n          {savedList.length !== 0 && (\r\n            <Button danger text=\"Clear all\" onClick={clearNames} />\r\n          )}\r\n        </Header.SecondSection>\r\n      </Header>\r\n\r\n      <Wrapper>\r\n        {savedList.length !== 0 ? (\r\n          <>\r\n            {savedList?.map(({ name, dates }, id) => (\r\n              <>\r\n                <Wrapper\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  margin=\"30px 0 20px\"\r\n                >\r\n                  <Search.Text size=\"large\">\r\n                    <>\r\n                      <b>{name}</b>\r\n                      {` has nameday at:`}\r\n                    </>\r\n                  </Search.Text>\r\n                  <Button\r\n                    text=\"Delete\"\r\n                    remove\r\n                    onClick={() => {\r\n                      deleteName(id);\r\n                    }}\r\n                  />\r\n                </Wrapper>\r\n                <Dates.Container>\r\n                  {dates.map(({ month, day }) => (\r\n                    <Dates.Card\r\n                      marked\r\n                      key={String(day) + String(month)}\r\n                      day={day}\r\n                      month={changeNumberToMonth(month)}\r\n                    />\r\n                  ))}\r\n                </Dates.Container>\r\n              </>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <Header.WhiteBoard>\r\n            <Header.MainSection>\r\n              <Header.MainText>\r\n                {`There aren't any saved names. Save some in 'Home' `}\r\n              </Header.MainText>\r\n            </Header.MainSection>\r\n          </Header.WhiteBoard>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport * as ROUTES from \"./utils/routes\";\r\n\r\nimport { ListProvider, ThemeLayout } from \"./context\";\r\nimport { Footer, Navbar } from \"./containers\";\r\nimport { Home, SavedList } from \"./pages\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ListProvider>\r\n        <ThemeLayout>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path={ROUTES.HOME}>\r\n              <Home />\r\n            </Route>\r\n            <Route exact path={ROUTES.SAVED}>\r\n              <SavedList />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <Redirect to={ROUTES.HOME} />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </ThemeLayout>\r\n      </ListProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}